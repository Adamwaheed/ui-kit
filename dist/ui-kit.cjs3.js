"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const i=require("vue");var K=!1;function j(e,r,o){return Array.isArray(e)?(e.length=Math.max(e.length,r),e.splice(r,1,o),o):(e[r]=o,o)}function I(e,r){if(Array.isArray(e)){e.splice(r,1);return}delete e[r]}/*!
  * pinia v2.0.33
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */let w;const C=e=>w=e,ee=process.env.NODE_ENV!=="production"?Symbol("pinia"):Symbol();function N(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var k;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(k||(k={}));const L=typeof window<"u",F=(process.env.NODE_ENV!=="production"||!1)&&process.env.NODE_ENV!=="test"&&L;function Q(e,r){for(const o in r){const n=r[o];if(!(o in e))continue;const c=e[o];N(c)&&N(n)&&!i.isRef(n)&&!i.isReactive(n)?e[o]=Q(c,n):e[o]=n}return e}const X=()=>{};function J(e,r,o,n=X){e.push(r);const c=()=>{const l=e.indexOf(r);l>-1&&(e.splice(l,1),n())};return!o&&i.getCurrentScope()&&i.onScopeDispose(c),c}function D(e,...r){e.slice().forEach(o=>{o(...r)})}function x(e,r){e instanceof Map&&r instanceof Map&&r.forEach((o,n)=>e.set(n,o)),e instanceof Set&&r instanceof Set&&r.forEach(e.add,e);for(const o in r){if(!r.hasOwnProperty(o))continue;const n=r[o],c=e[o];N(c)&&N(n)&&e.hasOwnProperty(o)&&!i.isRef(n)&&!i.isReactive(n)?e[o]=x(c,n):e[o]=n}return e}const te=process.env.NODE_ENV!=="production"?Symbol("pinia:skipHydration"):Symbol();function se(e){return!N(e)||!e.hasOwnProperty(te)}const{assign:b}=Object;function W(e){return!!(i.isRef(e)&&e.effect)}function G(e,r,o,n){const{state:c,actions:l,getters:u}=r,d=o.state.value[e];let v;function m(){!d&&(process.env.NODE_ENV==="production"||!n)&&(o.state.value[e]=c?c():{});const h=process.env.NODE_ENV!=="production"&&n?i.toRefs(i.ref(c?c():{}).value):i.toRefs(o.state.value[e]);return b(h,l,Object.keys(u||{}).reduce((p,g)=>(process.env.NODE_ENV!=="production"&&g in h&&console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with "${g}" in store "${e}".`),p[g]=i.markRaw(i.computed(()=>{C(o);const $=o._s.get(e);return u[g].call($,$)})),p),{}))}return v=B(e,m,r,o,n,!0),v}function B(e,r,o={},n,c,l){let u;const d=b({actions:{}},o);if(process.env.NODE_ENV!=="production"&&!n._e.active)throw new Error("Pinia destroyed");const v={deep:!0};process.env.NODE_ENV!=="production"&&!K&&(v.onTrigger=s=>{m?$=s:m==!1&&!a._hotUpdating&&(Array.isArray($)?$.push(s):console.error("🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug."))});let m,h,p=i.markRaw([]),g=i.markRaw([]),$;const R=n.state.value[e];!l&&!R&&(process.env.NODE_ENV==="production"||!c)&&(n.state.value[e]={});const V=i.ref({});let A;function T(s){let t;m=h=!1,process.env.NODE_ENV!=="production"&&($=[]),typeof s=="function"?(s(n.state.value[e]),t={type:k.patchFunction,storeId:e,events:$}):(x(n.state.value[e],s),t={type:k.patchObject,payload:s,storeId:e,events:$});const f=A=Symbol();i.nextTick().then(()=>{A===f&&(m=!0)}),h=!0,D(p,t,n.state.value[e])}const z=l?function(){const{state:t}=o,f=t?t():{};this.$patch(y=>{b(y,f)})}:process.env.NODE_ENV!=="production"?()=>{throw new Error(`🍍: Store "${e}" is built using the setup syntax and does not implement $reset().`)}:X;function H(){u.stop(),p=[],g=[],n._s.delete(e)}function M(s,t){return function(){C(n);const f=Array.from(arguments),y=[],q=[];function Y(_){y.push(_)}function Z(_){q.push(_)}D(g,{args:f,name:s,store:a,after:Y,onError:Z});let P;try{P=t.apply(this&&this.$id===e?this:a,f)}catch(_){throw D(q,_),_}return P instanceof Promise?P.then(_=>(D(y,_),_)).catch(_=>(D(q,_),Promise.reject(_))):(D(y,P),P)}}const O=i.markRaw({actions:{},getters:{},state:[],hotState:V}),U={_p:n,$id:e,$onAction:J.bind(null,g),$patch:T,$reset:z,$subscribe(s,t={}){const f=J(p,s,t.detached,()=>y()),y=u.run(()=>i.watch(()=>n.state.value[e],q=>{(t.flush==="sync"?h:m)&&s({storeId:e,type:k.direct,events:$},q)},b({},v,t)));return f},$dispose:H},a=i.reactive(process.env.NODE_ENV!=="production"||F?b({_hmrPayload:O,_customProperties:i.markRaw(new Set)},U):U);n._s.set(e,a);const E=n._e.run(()=>(u=i.effectScope(),u.run(()=>r())));for(const s in E){const t=E[s];if(i.isRef(t)&&!W(t)||i.isReactive(t))process.env.NODE_ENV!=="production"&&c?j(V.value,s,i.toRef(E,s)):l||(R&&se(t)&&(i.isRef(t)?t.value=R[s]:x(t,R[s])),n.state.value[e][s]=t),process.env.NODE_ENV!=="production"&&O.state.push(s);else if(typeof t=="function"){const f=process.env.NODE_ENV!=="production"&&c?t:M(s,t);E[s]=f,process.env.NODE_ENV!=="production"&&(O.actions[s]=t),d.actions[s]=t}else process.env.NODE_ENV!=="production"&&W(t)&&(O.getters[s]=l?o.getters[s]:t,L&&(E._getters||(E._getters=i.markRaw([]))).push(s))}if(b(a,E),b(i.toRaw(a),E),Object.defineProperty(a,"$state",{get:()=>process.env.NODE_ENV!=="production"&&c?V.value:n.state.value[e],set:s=>{if(process.env.NODE_ENV!=="production"&&c)throw new Error("cannot set hotState");T(t=>{b(t,s)})}}),process.env.NODE_ENV!=="production"&&(a._hotUpdate=i.markRaw(s=>{a._hotUpdating=!0,s._hmrPayload.state.forEach(t=>{if(t in a.$state){const f=s.$state[t],y=a.$state[t];typeof f=="object"&&N(f)&&N(y)?Q(f,y):s.$state[t]=y}j(a,t,i.toRef(s.$state,t))}),Object.keys(a.$state).forEach(t=>{t in s.$state||I(a,t)}),m=!1,h=!1,n.state.value[e]=i.toRef(s._hmrPayload,"hotState"),h=!0,i.nextTick().then(()=>{m=!0});for(const t in s._hmrPayload.actions){const f=s[t];j(a,t,M(t,f))}for(const t in s._hmrPayload.getters){const f=s._hmrPayload.getters[t],y=l?i.computed(()=>(C(n),f.call(a,a))):f;j(a,t,y)}Object.keys(a._hmrPayload.getters).forEach(t=>{t in s._hmrPayload.getters||I(a,t)}),Object.keys(a._hmrPayload.actions).forEach(t=>{t in s._hmrPayload.actions||I(a,t)}),a._hmrPayload=s._hmrPayload,a._getters=s._getters,a._hotUpdating=!1})),F){const s={writable:!0,configurable:!0,enumerable:!1};["_p","_hmrPayload","_getters","_customProperties"].forEach(t=>{Object.defineProperty(a,t,b({value:a[t]},s))})}return n._p.forEach(s=>{if(F){const t=u.run(()=>s({store:a,app:n._a,pinia:n,options:d}));Object.keys(t||{}).forEach(f=>a._customProperties.add(f)),b(a,t)}else b(a,u.run(()=>s({store:a,app:n._a,pinia:n,options:d})))}),process.env.NODE_ENV!=="production"&&a.$state&&typeof a.$state=="object"&&typeof a.$state.constructor=="function"&&!a.$state.constructor.toString().includes("[native code]")&&console.warn(`[🍍]: The "state" must be a plain object. It cannot be
	state: () => new MyClass()
Found in store "${a.$id}".`),R&&l&&o.hydrate&&o.hydrate(a.$state,R),m=!0,h=!0,a}function S(e,r,o){let n,c;const l=typeof r=="function";typeof e=="string"?(n=e,c=l?o:r):(c=e,n=e.id);function u(d,v){const m=i.getCurrentInstance();if(d=(process.env.NODE_ENV==="test"&&w&&w._testing?null:d)||m&&i.inject(ee,null),d&&C(d),process.env.NODE_ENV!=="production"&&!w)throw new Error(`[🍍]: getActivePinia was called with no active Pinia. Did you forget to install pinia?
	const pinia = createPinia()
	app.use(pinia)
This will fail in production.`);d=w,d._s.has(n)||(l?B(n,r,c,d):G(n,c,d),process.env.NODE_ENV!=="production"&&(u._pinia=d));const h=d._s.get(n);if(process.env.NODE_ENV!=="production"&&v){const p="__hot:"+n,g=l?B(p,r,c,d,!0):G(p,b({},c),d,!0);v._hotUpdate(g),delete d.state.value[p],d._s.delete(p)}if(process.env.NODE_ENV!=="production"&&L&&m&&m.proxy&&!v){const p=m.proxy,g="_pStores"in p?p._pStores:p._pStores={};g[n]=h}return h}return u.$id=n,u}const ne=S("auth",()=>{const e=useRuntimeConfig(),r=ref({}),o=async()=>{const u=useCookie("auth_token",{domain:e.public.session_domain}),d=computed(()=>`${e.public.auth_api}/secret`),v=await fetch(d.value,{method:"GET",headers:{"Content-type":"application/json; charset=UTF-8",Authorization:`Bearer ${u.value}`}});if(v.ok){const m=await v.json();r.value=m}else r.value=""};return{user:r,getUser:o,setUser:async u=>{r.value=u},switchTransactingAs:async(u,d)=>await $fetch(`${e.public.authorisation_api}/users/${u}/transacting-as`,{method:"post",body:{entity_id:d}}).then(v=>{if(!v.error)return o()}),logOut:async()=>{const u=useCookie("auth_token",{domain:e.public.session_domain});u.value=null,r.value=""}}}),oe=S("document",()=>{const e=useRuntimeConfig(),o={"Content-type":"application/json; charset=UTF-8",Authorization:`Bearer ${useCookie("auth_token",{domain:e.public.session_domain}).value}`},n=ref([]);return{documentTypes:n,getDocumentTypes:async()=>{n.value.length||(await $fetch(`${e.public.drs_api}/document-types`,{method:"get",headers:o})).forEach(u=>{n.value.push({id:u.id,name:u.name})})}}}),re=S("member",()=>{const e=useRuntimeConfig(),o={"Content-type":"application/json; charset=UTF-8",Authorization:`Bearer ${useCookie("auth_token",{domain:e.public.session_domain}).value}`},n=ref([]),c=ref(),l=ref();return{documents:n,getMemberDocuments:async h=>{const p=await $fetch(`${e.public.drs_api}/members/${h}/documents`,{method:"get",headers:o});n.value=p},getMember:async(h,p)=>await $fetch(`${e.public.drs_api}/members/get-member`,{method:"post",body:{identifer:h,dob:p},headers:o}),getMemberStatus:async(h,p)=>await $fetch(`${e.public.drs_api}/members/status?nid=${h}&dob=${p}`,{method:"get",headers:o}),searchMemberIdentifier:c,searchMemberDOB:l,setSearchParams:(h,p)=>{c.value=h,l.value=p}}}),ae=S("record",()=>{const e=useRuntimeConfig(),o={"Content-type":"application/json; charset=UTF-8",Authorization:`Bearer ${useCookie("auth_token",{domain:e.public.session_domain}).value}`},n=ref([]);return{disputeTypes:n,getDisputeTypes:async()=>{n.value.length||(await $fetch(`${e.public.drs_api}/dispute-types`,{method:"get",headers:o})).forEach(d=>{n.value.push({id:d.id,name:d.name})})},getOneRecord:async u=>await $fetch(`${e.public.drs_api}/records/${u}`,{method:"get",headers:o})}}),ce=S("request",()=>{const e=useRuntimeConfig(),r=useCookie("auth_token",{domain:e.public.session_domain}),o={"Content-type":"application/json; charset=UTF-8",Authorization:`Bearer ${r.value}`},n=ref({currentPage:0}),c=ref([]),l=ref([]),u=ref([]),d=ref([]),v=ref([]);return{documents:d,requests:c,history:v,pendingRequests:l,verifiedRequests:u,createRequest:async s=>await $fetch(`${e.public.drs_api}/requests`,{method:"post",body:s,headers:{Authorization:`Bearer ${r.value}`}}),updateRequest:async(s,t)=>await $fetch(`${e.public.drs_api}/requests/${s}`,{method:"PATCH",body:t,headers:o}),createDeathDispute:async s=>await $fetch(`${e.public.drs_api}/requests/dispute-death`,{method:"post",body:s,headers:o}),createDateDispute:async s=>await $fetch(`${e.public.drs_api}/requests/dispute-date`,{method:"post",body:s,headers:{Authorization:`Bearer ${r.value}`}}),getOnePendingRequest:async s=>{let t=l.value.find(f=>f.id==s);return t||(t=await $fetch(`${e.public.drs_api}/requests/${s}`,{method:"get",headers:o})),t},getOneVerifiedRequest:async s=>{let t=u.value.find(f=>f.id==s);return t||(t=await $fetch(`${e.public.drs_api}/requests/${s}`,{method:"get",headers:o})),t},getAllRequests:async s=>{const t=await $fetch(`${e.public.drs_api}/requests?page=${s}`,{method:"get",headers:o});c.value=t.data,n.value=t.meta},getPendingRequests:async s=>{const t=await $fetch(`${e.public.drs_api}/requests/pending?page=${s}`,{method:"get",headers:o});l.value=t.data,c.value=t.data,n.value=t.meta},getVerifiedRequests:async s=>{const t=await $fetch(`${e.public.drs_api}/requests/verified?page=${s}`,{method:"get",headers:o});u.value=t.data,c.value=t.data,n.value=t.meta},verifyRequest:async s=>{await $fetch(`${e.public.drs_api}/requests/${s}/verify`,{method:"post",headers:o}).then(t=>{t.state.name=="Verified"&&(l.value=l.value.filter(function(f){return f.id!==s}))})},approveRequest:async s=>{await $fetch(`${e.public.drs_api}/requests/${s}/approve`,{method:"post",headers:o}).then(t=>{t.state.name=="Approved"&&(u.value=u.value.filter(function(f){return f.id!==s}))})},invalidateRequest:async s=>{await $fetch(`${e.public.drs_api}/requests/${s}/invalidate`,{method:"post",headers:o}).then(t=>{t.state.name=="Invalid"&&(l.value=l.value.filter(function(f){return f.id!==s}))})},getDocuments:async s=>{const t=await $fetch(`${e.public.drs_api}/requests/${s}/documents`,{method:"get",headers:o});d.value=t},getHistory:async s=>{const t=await $fetch(`${e.public.drs_api}/requests/${s}/history`,{method:"get",headers:o});v.value=t},addRemarksToRequest:async(s,t)=>await $fetch(`${e.public.drs_api}/requests/${s}/remarks`,{method:"post",body:t,headers:o}),pageMeta:n,resetPageMeta:()=>{n.value={currentPage:0}}}});exports.useAuthStore=ne;exports.useDocumentStore=oe;exports.useMemberStore=re;exports.useRecordStore=ae;exports.useRequestStore=ce;
